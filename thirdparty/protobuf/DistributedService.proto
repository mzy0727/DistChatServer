syntax = "proto3"; //声明版本

package fixbug;//声明代码所在的包

//定义下面的选项，表示生成service服务类和rpc方法描述，默认不生成
option cc_generic_services = true;

//=========================================消息组件=====================================================
message RequestResult
{
    bool success = 1;
    bytes errmsg = 2;
}

message User
{
    int32 userid = 1;
    bytes username = 2;
    bytes userstate = 3;
}

message FriendList
{
    repeated User friend = 1;
}

message Group
{
    int32 groupid = 1;
    bytes groupname = 2;
    bytes groupdesc = 3;
    repeated User groupmember = 4;
    repeated bytes memberidentity = 5;
}

message GroupList
{
    repeated Group group = 1;
}

message ChatMessage
{
    bytes chattime = 1;
    int32 userid = 2;
    bytes username = 3;
    int32 groupid = 4;
    bytes groupname = 5;
    bytes msg = 6;
    int32 msgtype = 7;
}

message  protobuffer
{
    int32 protobuftype = 1;
    bytes protobufstr = 2;
}

//=====================================================================================================


//=========================================登录模块=====================================================
message LoginRequest
{
    int32 userid = 1;
    bytes password = 2;
}

message LoginResponse
{
    RequestResult result = 1;
    int32 userid = 2;
    bytes username = 3;
    FriendList friendlist = 4;
    GroupList grouplist = 5;
    repeated  ChatMessage  offlinemsglist= 6;
}

message LoginoutRequest
{
    int32 userid = 1;
}

message LoginoutResponse
{
    RequestResult result = 1;   
}

message RegisterRequest
{
    bytes username = 1;
    bytes password = 2;
}

message RegisterResponse
{
    RequestResult result = 1;
    int32 userid = 2;  
}

service UserServiceRpc
{
    rpc Login(LoginRequest) returns(LoginResponse);
    rpc Loginout(LoginoutRequest) returns(LoginoutResponse);
    rpc Register(RegisterRequest) returns(RegisterResponse);
}
//==========================================================================================================


//=========================================好友模块=====================================================
message GetFriendListRequest
{
   int32 userid = 1;
}
message GetFriendListResponse
{
    RequestResult result = 1;
    FriendList friendlist = 2;
}

message AddFriendRequest
{
    int32 userid = 1;
    int32 friendid = 2;
}
message AddFriendResponse
{
    RequestResult result = 1;
}

service FriendServiceRpc
{
    rpc GetFriendList(GetFriendListRequest) returns(GetFriendListResponse);
    rpc AddFriend(AddFriendRequest) returns(AddFriendResponse);
}
//==========================================================================================================



//=========================================群组模块=====================================================
message GetGroupListRequest
{
   int32 userid = 1;
}
message GetGroupListResponse
{
    RequestResult result = 1;
    GroupList grouplist = 2;
}

message CreateGroupRequest
{
    int32 userid = 1;
    bytes groupname = 2;
    bytes groupdesc = 3;
}
message CreateGroupResponse
{
    RequestResult result = 1;
    int32 groupid = 2;
}

message AddGroupRequest
{
   int32 userid = 1;
   int32 groupid = 2;
}
message AddGroupResponse
{
    RequestResult result = 1;
}

service GroupServiceRpc
{
    rpc GetGroupList(GetGroupListRequest) returns(GetGroupListResponse);
    rpc CreateGroup(CreateGroupRequest) returns(CreateGroupResponse);
    rpc AddGroup(AddGroupRequest) returns(AddGroupResponse);
}
//==========================================================================================================



//=========================================聊天模块=====================================================
message OneChatRequest
{
   int32 userid = 1;
   int32 friendid = 2;
   ChatMessage chatmsg = 3;
}

message OneChatResponse
{
    RequestResult result = 1;
}

message GroupChatRequest
{
    int32 userid = 1;
    int32 groupid = 2;
    ChatMessage chatmsg = 3;
}

message GroupChatResponse
{
    RequestResult result = 1;
}

message GetOfflineMsgRequest
{
   int32 userid = 1; 
}

message GetOfflineMsgResponse
{
    RequestResult result = 1;
    repeated  ChatMessage  offlinemsglist= 2;
}

service MsgServiceRpc
{
    rpc OneChat(OneChatRequest) returns(OneChatResponse);
    rpc GroupChat(GroupChatRequest) returns(GroupChatResponse);
    rpc GetOfflineMsg(GetOfflineMsgRequest) returns(GetOfflineMsgResponse);
}
//==========================================================================================================





